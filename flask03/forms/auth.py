#encoding:utf-8from wtforms import StringField, PasswordField, Formfrom wtforms.validators import Length, Email, \    ValidationError, EqualTo,DataRequiredfrom flask03.models.user import eUserclass RegisterForm(Form):    email = StringField(u'电子邮件', validators=[DataRequired(), Length(8, 64),                                            Email(message=u'电子邮箱不符合规范')])    user = StringField(u'账号', validators=[        DataRequired(), Length(2, 10, message=u'账号至少需要两个字符，最多10个字符')])    password = PasswordField(u'密码', validators=[        DataRequired(), Length(6, 32)])    #自定义验证器必须以validate开头 后面跟要校验的属性    def validate_email(self,filed):        if eUser.query.filter_by(email=filed.data).first():#查询数据库的快捷方法，返回一条数据            raise ValidationError(u'电子邮件已被注册')    def validate_user(self,filed):        if eUser.query.filter_by(user=filed.data).first():#查询数据库的快捷方法，返回一条数据            raise ValidationError(u'账号已存在')    def validate_password(self,filed):        passclass LoginForm(Form):    user = StringField(u'账号', validators=[        DataRequired(), Length(2, 10, message=u'账号至少需要两个字符，最多10个字符')])    password = PasswordField(u'密码', validators=[        DataRequired(message=u'密码不可以为空请输入你的密码'),Length(6, 32)])