#encoding:utf-8from werkzeug.security import generate_password_hash, check_password_hashfrom sqlalchemy import Column,Integer,String,Float,Booleanfrom flask03 import login_managerfrom flask03.models.base import Bases,dbfrom flask_login import UserMixinclass eUser(UserMixin,Bases):    print 2    # __tablename__='sdfs'#修改表名    id = Column(Integer, primary_key=True)    user = Column(String(18), unique=True)    _password=Column('password',String(128),nullable=False)#可以修改列名    email = Column(String(50), unique=True, nullable=False)    sex = Column(String(24), nullable=True)    confirmed=Column(Boolean,default=False)#数据预处理    @property    def password(self):        return self._password    @password.setter    def password(self,raw):        self._password=generate_password_hash(raw)#加密    def check_password(self,raw):        return check_password_hash(self._password,raw)#加密对比    # flask_login  为了写入cookie中  必须自定义规定的函数  上面继承了UserMixin 所以写入id 到cookie中不需要定义函数    # def get_id(self):    #     return self.id@login_manager.user_loader     #让flask_login 知道调用get_user函数def get_user(uid):    return eUser.query.get(int(uid))    #id是主键所以直接用get  获得用户模型