# #encoding:utf-8# from contextlib import contextmanagerfrom contextlib import contextmanagerfrom datetime import datetimefrom sqlalchemy import Column,Integer,String,Float,Boolean,SmallIntegerfrom flask_sqlalchemy import SQLAlchemy as _SQLAlchemyclass SQLAlchemy(_SQLAlchemy):    @contextmanager    def auto_commit(self, throw=True):        try:            yield            self.session.commit()        except Exception as e:            self.session.rollback()            if throw:                raise edb=SQLAlchemy()class Bases(db.Model):    __abstract__ = True  #不去创建Base表    create_time=Column('create_time',String(50))    status=Column(SmallInteger,default=1)    def __init__(self):        self.create_time=datetime.now()        print self.create_time    def set_attrs(self,attrs_dict):        for key,values in attrs_dict.items():             # 第一个参数传入要判断的对象，二 ：是否包含某个属性             if hasattr(self,key) and key !='id':                setattr(self,key,values)