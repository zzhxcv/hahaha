#encoding:utf-8from flask03.forms.auth import RegisterForm, LoginFormfrom flask03.models.user import eUser# from flask03.models.s import hafrom . import webfrom flask03.models.base import dbfrom flask import render_template, url_for, request, redirect, flashfrom flask_login import login_userfrom flask03.models.shop import Shop@web.route('/',methods=['GET','POST'])def doors():    return render_template('door.html')@web.route('/index',methods=['GET','POST'])def doorsc():    form = dict(request.args)    for i in form:        print form[i][0].encode('utf-8')        trade_gifts = Shop.query.filter_by(address= form[i][0].encode('utf-8'), confirmed=False).all()        if len(trade_gifts)==0:            flash(u'没有此地址')            return redirect(url_for('web.doors'))        print trade_gifts    return render_template('index.html',content=trade_gifts)@web.route('/login',methods=['GET','POST'])def lo():    form=LoginForm(request.form)    if request.method == 'POST' and form.validate():        user=eUser.query.filter_by(user=form.user.data).first()        if user and user.check_password(form.password.data):            login_user(user, remember=True)            next = request.args.get('next')  # 获得网址后面的参数            print next,'haha'            if not next or not next.startswith('/'):  # or后面为了防止重定向攻击                next = url_for('web.index')  # 如果直接访问gifts  next就会不存在 所以指向首页            return redirect(next)        else:            flash(u'账号或密码错误')    return render_template('auth/loginpage.html')@web.route('/register',methods=['GET', 'POST'])def zh():    form=RegisterForm(request.form)    if request.method == 'POST' and form.validate():        with db.auto_commit():            user= eUser()            user.set_attrs(form.data)            db.session.add(user)        # db.session.commit()        return redirect(url_for('web.lo'))    return render_template('auth/loginzhuce.html' ,form=form)